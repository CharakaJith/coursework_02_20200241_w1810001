{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "TravelTales API Document",
    "description": "Swagger document for TravelTales API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api/v1",
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your JWT token in double quotes, e.g. \"your.token.here\""
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "Endpoints related to the user"
    },
    {
      "name": "Post",
      "description": "Endpoints related to the blog-post"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/user/": {
      "post": {
        "tags": ["User"],
        "description": "Registers a new user by creating an account with the provided credentials.",
        "parameters": [
          {
            "name": "user/",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserSignUp"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "User successfully registered.",
            "schema": {
              "$ref": "#/definitions/UserSignUpSuccessResponse"
            }
          },
          "400": {
            "description": "User failed to provide required details.",
            "schema": {
              "$ref": "#/definitions/UserSignUpBadResponse"
            }
          },
          "409": {
            "description": "User already registered in the system.",
            "schema": {
              "$ref": "#/definitions/UserSignUpConflictResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Updates existing user details.",
        "parameters": [
          {
            "name": "user/",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User details updated successfully.",
            "schema": {
              "$ref": "#/definitions/UserUpdateSuccessResponse"
            }
          },
          "400": {
            "description": "User failed to provide required details.",
            "schema": {
              "$ref": "#/definitions/UserUpdateBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "403": {
            "description": "User is not active.",
            "schema": {
              "$ref": "#/definitions/UserUpdateForbiddonResponse"
            }
          },
          "404": {
            "description": "User record is not available in the database.",
            "schema": {
              "$ref": "#/definitions/UserUpdateNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Deactivate user profile.",
        "produces": ["application/json"],
        "responses": {
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "403": {
            "description": "User is not active.",
            "schema": {
              "$ref": "#/definitions/UserDeleteForbiddonResponse"
            }
          },
          "404": {
            "description": "User record is not available in the database.",
            "schema": {
              "$ref": "#/definitions/UserDeleteNotFoundResponse"
            }
          },
          "410": {
            "description": "User profile deactivated successfully.",
            "schema": {
              "$ref": "#/definitions/UserDeleteSuccessResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["User"],
        "description": "Generate access-token and refresh-token based on user login.",
        "parameters": [
          {
            "name": "user/login",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User successfully logged in.",
            "headers": {
              "Access-Token": {
                "type": "string",
                "description": "Access-token generated on user login.",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlblVzZXIiOnsiaWQiOjEsImZpcnN0TmFtZSI6IkpvaG4iLCJsYXN0TmFtZSI6IkRvZSIsImVtYWlsIjoiam9obkBleGFtcGxlLmNvbSIsImlzQWN0aXZlIjp0cnVlfSwiaWF0IjoxNzQwODA3NjkzLCJleHAiOjE3NDA4MTg0OTN9.U2JTzgAcNb3PnlgYzQBNbgkNBfuANpezpuE8TpZsgHc"
              },
              "Set-Cookie": {
                "type": "string",
                "description": "Refresh token stored in an HTTP-only cookie",
                "example": "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlblVzZXIiOnsiaWQiOjEsImZpcnN0TmFtZSI6IkpvaG4iLCJsYXN0TmFtZSI6IkRvZSIsImVtYWlsIjoiam9obkBleGFtcGxlLmNvbSIsImlzQWN0aXZlIjp0cnVlfSwiaWF0IjoxNzQwODA3NjkzLCJleHAiOjE3NDE0MTI0OTN9.wDhujt4pxgMQ3iLVmqQb2Be8COqXxoIFU4TTn7V0jzo; Path=/; HttpOnly; Secure; SameSite=Strict"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserSignUpSuccessResponse"
            }
          },
          "400": {
            "description": "User failed to provide required details.",
            "schema": {
              "$ref": "#/definitions/UserLoginBadResponse"
            }
          },
          "401": {
            "description": "User provided invalid details.",
            "schema": {
              "$ref": "#/definitions/UserLoginUnauthorizedResponse"
            }
          },
          "403": {
            "description": "User is not active.",
            "schema": {
              "$ref": "#/definitions/UserLoginForbiddondResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/user/password": {
      "put": {
        "tags": ["User"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Updates existing user's password.",
        "parameters": [
          {
            "name": "user/password",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserPassword"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User password updated successfully.",
            "schema": {
              "$ref": "#/definitions/UserPasswordSuccessResponse"
            }
          },
          "400": {
            "description": "User failed to provide required details.",
            "schema": {
              "$ref": "#/definitions/UserPasswordBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed or user's old password is incorrect.",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/AuthFailedResponse"
                },
                {
                  "$ref": "#/definitions/UserPasswordUnauthResponse"
                }
              ]
            }
          },
          "403": {
            "description": "User is not active.",
            "schema": {
              "$ref": "#/definitions/UserPasswordForbiddonResponse"
            }
          },
          "404": {
            "description": "User record is not available in the database.",
            "schema": {
              "$ref": "#/definitions/UserPasswordNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },

    "/post/": {
      "post": {
        "tags": ["Post"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Create a new blog-post with provided details.",
        "parameters": [
          {
            "name": "post/",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostCreate"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New post created successfully.",
            "schema": {
              "$ref": "#/definitions/PostCreateSuccessResponse"
            }
          },
          "400": {
            "description": "Required details are not provided.",
            "schema": {
              "$ref": "#/definitions/PostCreateBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed or user's old password is incorrect.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "404": {
            "description": "Invalid country ID.",
            "schema": {
              "$ref": "#/definitions/PostCreateNotFoundResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UserSignUp": {
      "type": "object",
      "required": ["firstName", "lastName", "phone", "email", "password"],
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "example": "Doe",
          "description": "Last name of the user."
        },
        "phone": {
          "type": "string",
          "example": "+94701234567",
          "description": "Mobile number of the user."
        },
        "email": {
          "type": "string",
          "example": "john@example.com",
          "description": "Unique email of the user."
        },
        "password": {
          "type": "string",
          "example": "randomPwd123",
          "description": "Secure password of the user."
        }
      }
    },
    "UserSignUpSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "201"
            },
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "isActive": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "id": {
                      "type": "number",
                      "example": "1"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+94701234567"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserSignUpBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string",
                    "example": "firstName"
                  },
                  "message": {
                    "type": "string",
                    "example": "Field 'firstName' is empty!"
                  }
                },
                "example": [
                  {
                    "fields": "firstName",
                    "message": "Field 'firstName' is empty!"
                  },
                  {
                    "fields": "lastName",
                    "message": "Field 'lastName' is empty!"
                  },
                  {
                    "fields": "email",
                    "message": "Field 'email' is empty!"
                  },
                  {
                    "fields": "email",
                    "message": "Invalid 'email' format!"
                  },
                  {
                    "fields": "password",
                    "message": "Field 'password' is empty!"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "UserSignUpConflictResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "409"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User already registered!"
                }
              }
            }
          }
        }
      }
    },

    "UserUpdate": {
      "type": "object",
      "required": ["firstName", "lastName"],
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Johnathan",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "example": "Doe",
          "description": "Last name of the user."
        },
        "phone": {
          "type": "string",
          "example": "+94701234567",
          "description": "Mobile number of the user."
        }
      }
    },
    "UserUpdateSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "isActive": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "id": {
                      "type": "number",
                      "example": "1"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+94701234567"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserUpdateBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "example": [
                  {
                    "fields": "firstName",
                    "message": "The 'firstName' field is required."
                  },
                  {
                    "fields": "lastName",
                    "message": "The 'lastName' field is required."
                  },
                  {
                    "fields": "phone",
                    "message": "The 'phone' field is required."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "UserUpdateForbiddonResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User account is inactive."
                }
              }
            }
          }
        }
      }
    },
    "UserUpdateNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found."
                }
              }
            }
          }
        }
      }
    },

    "UserLogin": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "example": "john@example.com",
          "description": "Unique email of the user."
        },
        "password": {
          "type": "string",
          "example": "randomPwd123",
          "description": "Secure password of the user."
        }
      }
    },
    "UserLoginSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "isActive": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "id": {
                      "type": "number",
                      "example": "1"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserLoginBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "example": [
                  {
                    "fields": "email",
                    "message": "The 'email' field is required."
                  },
                  {
                    "fields": "email",
                    "message": "Invalid format for 'email'."
                  },
                  {
                    "fields": "password",
                    "message": "The 'password' field is required."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "UserLoginUnauthorizedResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "401"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid user credentials."
                }
              }
            }
          }
        }
      }
    },
    "UserLoginForbiddondResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User account is inactive."
                }
              }
            }
          }
        }
      }
    },

    "UserPassword": {
      "type": "object",
      "required": ["oldPassword", "newPassword"],
      "properties": {
        "oldPassword": {
          "type": "string",
          "example": "randomPwd123",
          "description": "Current password of the user."
        },
        "newPassword": {
          "type": "string",
          "example": "updatedPwd098",
          "description": "New password of the user."
        }
      }
    },
    "UserPasswordSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Password updated successfully."
                }
              }
            }
          }
        }
      }
    },
    "UserPasswordBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "example": [
                  {
                    "fields": "oldPassword",
                    "message": "The 'oldPassword' field is required."
                  },
                  {
                    "fields": "newPassword",
                    "message": "The 'newPassword' field is required."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "UserPasswordForbiddonResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User account is inactive."
                }
              }
            }
          }
        }
      }
    },
    "UserPasswordNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found."
                }
              }
            }
          }
        }
      }
    },
    "UserPasswordUnauthResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "401"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Current password is incorrect."
                }
              }
            }
          }
        }
      }
    },

    "UserDeleteSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "410"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User profile has been permanently deleted."
                }
              }
            }
          }
        }
      }
    },
    "UserDeleteNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found."
                }
              }
            }
          }
        }
      }
    },
    "UserDeleteForbiddonResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User account is inactive."
                }
              }
            }
          }
        }
      }
    },

    "PostCreate": {
      "type": "object",
      "required": ["title", "content", "countryId", "visitDate"],
      "properties": {
        "title": {
          "type": "string",
          "example": "First day at France",
          "description": "Title of the blog-post."
        },
        "content": {
          "type": "string",
          "example": "Touching down in France felt like stepping into a dream. From the aroma of fresh croissants in the morning air to the charm of cobblestone streets and cozy cafés, everything was surreal. Navigating a new language and culture was both exciting and humbling — but every smile, every “bonjour,” made the journey feel warm and welcoming.",
          "description": "Content of the blog-post."
        },
        "countryId": {
          "type": "number",
          "example": 23,
          "description": "Country abount the blog-post being made."
        },
        "visitDate": {
          "type": "string",
          "example": "31/03/2025",
          "description": "Date of the visit."
        }
      }
    },
    "PostCreateSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "201"
            },
            "data": {
              "type": "object",
              "properties": {
                "post": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "First day at France"
                    },
                    "content": {
                      "type": "string",
                      "example": "Touching down in France felt like stepping into a dream. From the aroma of fresh croissants in the morning air to the charm of cobblestone streets and cozy cafés, everything was surreal. Navigating a new language and culture was both exciting and humbling — but every smile, every “bonjour,” made the journey feel warm and welcoming."
                    },
                    "countryId": {
                      "type": "number",
                      "example": 23
                    },
                    "visitDate": {
                      "type": "string",
                      "example": "2025-03-31T00:00:00.000Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-04-20T17:55:59.105Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-04-20T17:55:59.105Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PostCreateBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "example": [
                  {
                    "fields": "title",
                    "message": "The 'title' field is required."
                  },
                  {
                    "fields": "content",
                    "message": "The 'content' field is required."
                  },
                  {
                    "fields": "countryId",
                    "message": "The 'countryId' field is required."
                  },
                  {
                    "fields": "visitDate",
                    "message": "The 'visitDate' field is required."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "PostCreateNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "The country does not exist."
                }
              }
            }
          }
        }
      }
    },

    "ServerErrorResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "500"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Server error message!"
                }
              }
            }
          }
        }
      }
    },
    "AuthFailedResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "401"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Authentication failed."
                }
              }
            }
          }
        }
      }
    }
  }
}
