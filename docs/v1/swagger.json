{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "TravelTales API Document",
    "description": "Swagger document for TravelTales API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api/v1",
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your JWT token in double quotes, e.g. \"your.token.here\""
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "Endpoints related to the user"
    },
    {
      "name": "Post",
      "description": "Endpoints related to the blog-post"
    },
    {
      "name": "Country",
      "description": "Endpoints related to countries"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/user/": {
      "get": {
        "tags": ["User"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Get all users with posts, followers and following.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Fetched all users successfully.",
            "schema": {
              "$ref": "#/definitions/UserGetAllSuccessResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      },

      "post": {
        "tags": ["User"],
        "description": "Registers a new user by creating an account with the provided credentials.",
        "parameters": [
          {
            "name": "user/",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserSignUp"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "User successfully registered.",
            "schema": {
              "$ref": "#/definitions/UserSignUpSuccessResponse"
            }
          },
          "400": {
            "description": "User failed to provide required details.",
            "schema": {
              "$ref": "#/definitions/UserSignUpBadResponse"
            }
          },
          "409": {
            "description": "User already registered in the system.",
            "schema": {
              "$ref": "#/definitions/UserSignUpConflictResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Updates existing user details.",
        "parameters": [
          {
            "name": "user/",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User details updated successfully.",
            "schema": {
              "$ref": "#/definitions/UserUpdateSuccessResponse"
            }
          },
          "400": {
            "description": "User failed to provide required details.",
            "schema": {
              "$ref": "#/definitions/UserUpdateBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "403": {
            "description": "User is not active.",
            "schema": {
              "$ref": "#/definitions/UserUpdateForbiddonResponse"
            }
          },
          "404": {
            "description": "User record is not available in the database.",
            "schema": {
              "$ref": "#/definitions/UserUpdateNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Deactivate user profile.",
        "produces": ["application/json"],
        "responses": {
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "403": {
            "description": "User is not active.",
            "schema": {
              "$ref": "#/definitions/UserDeleteForbiddonResponse"
            }
          },
          "404": {
            "description": "User record is not available in the database.",
            "schema": {
              "$ref": "#/definitions/UserDeleteNotFoundResponse"
            }
          },
          "410": {
            "description": "User profile deactivated successfully.",
            "schema": {
              "$ref": "#/definitions/UserDeleteSuccessResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/user/1": {
      "get": {
        "tags": ["User"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Get a user by ID with posts, followers and following.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Fetched user by ID successfully.",
            "schema": {
              "$ref": "#/definitions/UserGetByIdSuccessResponse"
            }
          },
          "400": {
            "description": "Invalid type for user ID.",
            "schema": {
              "$ref": "#/definitions/UserGetByIdBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "404": {
            "description": "No user found for the given ID.",
            "schema": {
              "$ref": "#/definitions/UserGetByIdNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["User"],
        "description": "Generate access-token and refresh-token based on user login.",
        "parameters": [
          {
            "name": "user/login",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User successfully logged in.",
            "headers": {
              "Access-Token": {
                "type": "string",
                "description": "Access-token generated on user login.",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlblVzZXIiOnsiaWQiOjEsImZpcnN0TmFtZSI6IkpvaG4iLCJsYXN0TmFtZSI6IkRvZSIsImVtYWlsIjoiam9obkBleGFtcGxlLmNvbSIsImlzQWN0aXZlIjp0cnVlfSwiaWF0IjoxNzQwODA3NjkzLCJleHAiOjE3NDA4MTg0OTN9.U2JTzgAcNb3PnlgYzQBNbgkNBfuANpezpuE8TpZsgHc"
              },
              "Set-Cookie": {
                "type": "string",
                "description": "Refresh token stored in an HTTP-only cookie",
                "example": "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlblVzZXIiOnsiaWQiOjEsImZpcnN0TmFtZSI6IkpvaG4iLCJsYXN0TmFtZSI6IkRvZSIsImVtYWlsIjoiam9obkBleGFtcGxlLmNvbSIsImlzQWN0aXZlIjp0cnVlfSwiaWF0IjoxNzQwODA3NjkzLCJleHAiOjE3NDE0MTI0OTN9.wDhujt4pxgMQ3iLVmqQb2Be8COqXxoIFU4TTn7V0jzo; Path=/; HttpOnly; Secure; SameSite=Strict"
              }
            },
            "schema": {
              "$ref": "#/definitions/UserSignUpSuccessResponse"
            }
          },
          "400": {
            "description": "User failed to provide required details.",
            "schema": {
              "$ref": "#/definitions/UserLoginBadResponse"
            }
          },
          "401": {
            "description": "User provided invalid details.",
            "schema": {
              "$ref": "#/definitions/UserLoginUnauthorizedResponse"
            }
          },
          "403": {
            "description": "User is not active.",
            "schema": {
              "$ref": "#/definitions/UserLoginForbiddondResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/user/password": {
      "put": {
        "tags": ["User"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Updates existing user's password.",
        "parameters": [
          {
            "name": "user/password",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserPassword"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User password updated successfully.",
            "schema": {
              "$ref": "#/definitions/UserPasswordSuccessResponse"
            }
          },
          "400": {
            "description": "User failed to provide required details.",
            "schema": {
              "$ref": "#/definitions/UserPasswordBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed or user's old password is incorrect.",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/AuthFailedResponse"
                },
                {
                  "$ref": "#/definitions/UserPasswordUnauthResponse"
                }
              ]
            }
          },
          "403": {
            "description": "User is not active.",
            "schema": {
              "$ref": "#/definitions/UserPasswordForbiddonResponse"
            }
          },
          "404": {
            "description": "User record is not available in the database.",
            "schema": {
              "$ref": "#/definitions/UserPasswordNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/user/follow": {
      "post": {
        "tags": ["User"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Follow a user.",
        "parameters": [
          {
            "name": "user/",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserFollow"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User followed successfully.",
            "schema": {
              "$ref": "#/definitions/UserFollowSuccessResponse"
            }
          },
          "400": {
            "description": "User failed to provide required details.",
            "schema": {
              "$ref": "#/definitions/UserFollowBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "403": {
            "description": "User ID is equal to follower ID or already following this user.",
            "schema": {
              "$ref": "#/definitions/UserFollowForbiddonResponse"
            }
          },
          "404": {
            "description": "Follower not found.",
            "schema": {
              "$ref": "#/definitions/UserFollowNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/user/unfollow": {
      "post": {
        "tags": ["User"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Unfollow a user by follow ID.",
        "parameters": [
          {
            "name": "user/",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserUnfollow"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User unfollowed successfully.",
            "schema": {
              "$ref": "#/definitions/UserUnfollowSuccessResponse"
            }
          },
          "400": {
            "description": "Failed to provide required details.",
            "schema": {
              "$ref": "#/definitions/UserUnfollowBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "403": {
            "description": "Following record does not belong to the user.",
            "schema": {
              "$ref": "#/definitions/UserUnfollowForbiddonResponse"
            }
          },
          "404": {
            "description": "Follow record not found for ID.",
            "schema": {
              "$ref": "#/definitions/UserUnfollowNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },

    "/post/": {
      "post": {
        "tags": ["Post"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Create a new blog-post with provided details.",
        "parameters": [
          {
            "name": "post/",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostCreate"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "New post created successfully.",
            "schema": {
              "$ref": "#/definitions/PostCreateSuccessResponse"
            }
          },
          "400": {
            "description": "Required details are not provided.",
            "schema": {
              "$ref": "#/definitions/PostCreateBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "404": {
            "description": "Invalid country ID.",
            "schema": {
              "$ref": "#/definitions/PostCreateNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": ["Post"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Update a blog post.",
        "parameters": [
          {
            "name": "post/",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostUpdate"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Post updated successfully.",
            "schema": {
              "$ref": "#/definitions/PostUpdateSuccessResponse"
            }
          },
          "400": {
            "description": "Required details are not provided.",
            "schema": {
              "$ref": "#/definitions/PostUpdateBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "403": {
            "description": "Post does not belong to the user.",
            "schema": {
              "$ref": "#/definitions/PostUpdateForbiddonResponse"
            }
          },
          "404": {
            "description": "Post not found or country not found.",
            "schema": {
              "$ref": "#/definitions/PostUpdateNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/post/all": {
      "get": {
        "tags": ["Post"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Get all blog-posts in the system.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All posts fetched successfully.",
            "schema": {
              "$ref": "#/definitions/PostGetAllSuccessResponse"
            }
          },
          "400": {
            "description": "Invalid post type.",
            "schema": {
              "$ref": "#/definitions/PostGetAllBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/post/user": {
      "get": {
        "tags": ["Post"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Get all blog-posts updated by the user.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All posts fetched successfully.",
            "schema": {
              "$ref": "#/definitions/PostGetAllSuccessResponse"
            }
          },
          "400": {
            "description": "Invalid post type.",
            "schema": {
              "$ref": "#/definitions/PostGetAllBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },
    "/post/1": {
      "get": {
        "tags": ["Post"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Get a blog-post by ID.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Blog post fetched successfully.",
            "schema": {
              "$ref": "#/definitions/PostGetByIdSuccessResponse"
            }
          },
          "400": {
            "description": "Invalid format for the post ID.",
            "schema": {
              "$ref": "#/definitions/PostGetByIdBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "404": {
            "description": "Post not found.",
            "schema": {
              "$ref": "#/definitions/PostGetByIdNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["Post"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Delete a blog post.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Blog post deleted successfully.",
            "schema": {
              "$ref": "#/definitions/PostDeleteSuccessResponse"
            }
          },
          "400": {
            "description": "Invalid post ID.",
            "schema": {
              "$ref": "#/definitions/PostDeleteBadResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "403": {
            "description": "Post does not belong to the user.",
            "schema": {
              "$ref": "#/definitions/PostDeleteForbiddonResponse"
            }
          },
          "404": {
            "description": "Post not found.",
            "schema": {
              "$ref": "#/definitions/PostDeleteNotFoundResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    },

    "/country": {
      "get": {
        "tags": ["Country"],
        "security": [
          {
            "JWT": []
          }
        ],
        "description": "Get all country details.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Fetched all countries successfully.",
            "schema": {
              "$ref": "#/definitions/CountryGetAllSuccessResponse"
            }
          },
          "401": {
            "description": "Authentication token failed.",
            "schema": {
              "$ref": "#/definitions/AuthFailedResponse"
            }
          },
          "500": {
            "description": "Unexpected server error occurred in the system.",
            "schema": {
              "$ref": "#/definitions/ServerErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UserGetAllSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "example": 1
                      },
                      "firstName": {
                        "type": "string",
                        "example": "John"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Doe"
                      },
                      "phone": {
                        "type": "string",
                        "example": "+94701234567"
                      },
                      "email": {
                        "type": "string",
                        "example": "john@example.com"
                      },
                      "isActive": {
                        "type": "boolean",
                        "example": true
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2025-05-04T18:30:05.944Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2025-05-04T18:30:05.944Z"
                      },
                      "Posts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "example": 1
                            },
                            "userId": {
                              "type": "number",
                              "example": 1
                            },
                            "title": {
                              "type": "string",
                              "example": "Finding Authentic Italy in the Quiet Corners of Umbria"
                            },
                            "content": {
                              "type": "string",
                              "example": "Everyone dreams of Italy—the Colosseum in Rome, gondolas in Venice, Tuscan vineyards at golden hour. But tucked between Tuscany and Lazio is Umbria, a region often overlooked but rich with authenticity, charm, and quiet beauty. It’s Italy without the crowds. It’s Italy that whispers instead of shouts. Perugia, the regional capital, is a medieval city perched high on a hill. Walking its streets is like stepping into a Renaissance painting—archways, steep staircases, and locals gathering in quiet piazzas. Unlike tourist-swarmed Rome, here you’ll hear more Italian than English. The pace is slower. The coffee stronger. The conversations longer. A short drive away is Assisi, the birthplace of Saint Francis. Its pink-stone basilica, built into a slope, contains frescoes that glow softly in the candlelight. But it’s the silence of the town that moves you more than its monuments. Pilgrims walk the cobbled lanes with purpose, while others just stop to breathe in the hills. Then there’s Spello, one of Umbria’s most beautiful villages, especially in spring when flower boxes spill color over its ancient stone walls. Each doorway is framed with blooms. It’s like walking through a living garden. You won’t find massive attractions here, just small bakeries, family-run osterias, and the quiet joy of discovery. Food in Umbria is honest and earthy. Truffles are king. Try strangozzi al tartufo, pasta tossed with black truffle shavings and olive oil. Pair it with a glass of Sagrantino wine, and you’ll understand why Umbrians rarely leave home. Meals here are events—long, lively, and layered with pride. In Umbria, you don’t chase the highlights. You settle into the rhythm—morning espresso under a fig tree, lunch in a sunlit piazza, golden light over olive groves at dusk. It’s a region that gives without needing to impress. Italy has many faces. Umbria is its quiet smile."
                            },
                            "countryId": {
                              "type": "number",
                              "example": 1
                            },
                            "visitDate": {
                              "type": "string",
                              "example": "2025-05-01T00:00:00.000Z"
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2025-05-04T18:31:57.559Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2025-05-04T18:31:57.559Z"
                            },
                            "Likes": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "userId": {
                                    "type": "number",
                                    "example": 2
                                  },
                                  "postId": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "isLike": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2025-05-04T18:31:57.559Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2025-05-04T18:31:57.559Z"
                                  }
                                }
                              }
                            },
                            "Comments": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "userId": {
                                    "type": "number",
                                    "example": 2
                                  },
                                  "postId": {
                                    "type": "number",
                                    "example": 1
                                  },
                                  "content": {
                                    "type": "string",
                                    "example": "Nice post! Loved it."
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2025-05-04T18:31:57.559Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2025-05-04T18:31:57.559Z"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Followers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "example": 2
                            },
                            "firstName": {
                              "type": "string",
                              "example": "Jane"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "Follow": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      },
                      "Following": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "example": 2
                            },
                            "firstName": {
                              "type": "string",
                              "example": "Jane"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "Follow": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "example": 2
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "UserGetByIdSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+94701234567"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "isActive": {
                      "type": "boolean",
                      "example": true
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-05-04T18:30:05.944Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-05-04T18:30:05.944Z"
                    },
                    "Posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "userId": {
                            "type": "number",
                            "example": 1
                          },
                          "title": {
                            "type": "string",
                            "example": "Finding Authentic Italy in the Quiet Corners of Umbria"
                          },
                          "content": {
                            "type": "string",
                            "example": "Everyone dreams of Italy—the Colosseum in Rome, gondolas in Venice, Tuscan vineyards at golden hour. But tucked between Tuscany and Lazio is Umbria, a region often overlooked but rich with authenticity, charm, and quiet beauty. It’s Italy without the crowds. It’s Italy that whispers instead of shouts. Perugia, the regional capital, is a medieval city perched high on a hill. Walking its streets is like stepping into a Renaissance painting—archways, steep staircases, and locals gathering in quiet piazzas. Unlike tourist-swarmed Rome, here you’ll hear more Italian than English. The pace is slower. The coffee stronger. The conversations longer. A short drive away is Assisi, the birthplace of Saint Francis. Its pink-stone basilica, built into a slope, contains frescoes that glow softly in the candlelight. But it’s the silence of the town that moves you more than its monuments. Pilgrims walk the cobbled lanes with purpose, while others just stop to breathe in the hills. Then there’s Spello, one of Umbria’s most beautiful villages, especially in spring when flower boxes spill color over its ancient stone walls. Each doorway is framed with blooms. It’s like walking through a living garden. You won’t find massive attractions here, just small bakeries, family-run osterias, and the quiet joy of discovery. Food in Umbria is honest and earthy. Truffles are king. Try strangozzi al tartufo, pasta tossed with black truffle shavings and olive oil. Pair it with a glass of Sagrantino wine, and you’ll understand why Umbrians rarely leave home. Meals here are events—long, lively, and layered with pride. In Umbria, you don’t chase the highlights. You settle into the rhythm—morning espresso under a fig tree, lunch in a sunlit piazza, golden light over olive groves at dusk. It’s a region that gives without needing to impress. Italy has many faces. Umbria is its quiet smile."
                          },
                          "countryId": {
                            "type": "number",
                            "example": 1
                          },
                          "visitDate": {
                            "type": "string",
                            "example": "2025-05-01T00:00:00.000Z"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2025-05-04T18:31:57.559Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2025-05-04T18:31:57.559Z"
                          },
                          "Likes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "example": 1
                                },
                                "userId": {
                                  "type": "number",
                                  "example": 2
                                },
                                "postId": {
                                  "type": "number",
                                  "example": 1
                                },
                                "isLike": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "createdAt": {
                                  "type": "string",
                                  "example": "2025-05-04T18:31:57.559Z"
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "example": "2025-05-04T18:31:57.559Z"
                                }
                              }
                            }
                          },
                          "Comments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "example": 1
                                },
                                "userId": {
                                  "type": "number",
                                  "example": 2
                                },
                                "postId": {
                                  "type": "number",
                                  "example": 1
                                },
                                "content": {
                                  "type": "string",
                                  "example": "Nice post! Loved it."
                                },
                                "createdAt": {
                                  "type": "string",
                                  "example": "2025-05-04T18:31:57.559Z"
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "example": "2025-05-04T18:31:57.559Z"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Followers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 2
                          },
                          "firstName": {
                            "type": "string",
                            "example": "Jane"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "Follow": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "Following": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 2
                          },
                          "firstName": {
                            "type": "string",
                            "example": "Jane"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Doe"
                          },
                          "Follow": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "example": 2
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserGetByIdBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid format for user ID."
                }
              }
            }
          }
        }
      }
    },
    "UserGetByIdNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found."
                }
              }
            }
          }
        }
      }
    },

    "UserSignUp": {
      "type": "object",
      "required": ["firstName", "lastName", "phone", "email", "password"],
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "example": "Doe",
          "description": "Last name of the user."
        },
        "phone": {
          "type": "string",
          "example": "+94701234567",
          "description": "Mobile number of the user."
        },
        "email": {
          "type": "string",
          "example": "john@example.com",
          "description": "Unique email of the user."
        },
        "password": {
          "type": "string",
          "example": "randomPwd123",
          "description": "Secure password of the user."
        }
      }
    },
    "UserSignUpSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "201"
            },
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "isActive": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "id": {
                      "type": "number",
                      "example": "1"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+94701234567"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserSignUpBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string",
                    "example": "firstName"
                  },
                  "message": {
                    "type": "string",
                    "example": "Field 'firstName' is empty!"
                  }
                },
                "example": [
                  {
                    "fields": "firstName",
                    "message": "Field 'firstName' is empty!"
                  },
                  {
                    "fields": "lastName",
                    "message": "Field 'lastName' is empty!"
                  },
                  {
                    "fields": "email",
                    "message": "Field 'email' is empty!"
                  },
                  {
                    "fields": "email",
                    "message": "Invalid 'email' format!"
                  },
                  {
                    "fields": "password",
                    "message": "Field 'password' is empty!"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "UserSignUpConflictResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "409"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User already registered!"
                }
              }
            }
          }
        }
      }
    },

    "UserUpdate": {
      "type": "object",
      "required": ["firstName", "lastName"],
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Johnathan",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "example": "Doe",
          "description": "Last name of the user."
        },
        "phone": {
          "type": "string",
          "example": "+94701234567",
          "description": "Mobile number of the user."
        }
      }
    },
    "UserUpdateSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "isActive": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "id": {
                      "type": "number",
                      "example": "1"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+94701234567"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserUpdateBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "example": [
                  {
                    "fields": "firstName",
                    "message": "The 'firstName' field is required."
                  },
                  {
                    "fields": "lastName",
                    "message": "The 'lastName' field is required."
                  },
                  {
                    "fields": "phone",
                    "message": "The 'phone' field is required."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "UserUpdateForbiddonResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User account is inactive."
                }
              }
            }
          }
        }
      }
    },
    "UserUpdateNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found."
                }
              }
            }
          }
        }
      }
    },

    "UserLogin": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "example": "john@example.com",
          "description": "Unique email of the user."
        },
        "password": {
          "type": "string",
          "example": "randomPwd123",
          "description": "Secure password of the user."
        }
      }
    },
    "UserLoginSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "isActive": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "id": {
                      "type": "number",
                      "example": "1"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-03-01T03:21:47.716Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserLoginBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "example": [
                  {
                    "fields": "email",
                    "message": "The 'email' field is required."
                  },
                  {
                    "fields": "email",
                    "message": "Invalid format for 'email'."
                  },
                  {
                    "fields": "password",
                    "message": "The 'password' field is required."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "UserLoginUnauthorizedResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "401"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid user credentials."
                }
              }
            }
          }
        }
      }
    },
    "UserLoginForbiddondResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User account is inactive."
                }
              }
            }
          }
        }
      }
    },

    "UserPassword": {
      "type": "object",
      "required": ["oldPassword", "newPassword"],
      "properties": {
        "oldPassword": {
          "type": "string",
          "example": "randomPwd123",
          "description": "Current password of the user."
        },
        "newPassword": {
          "type": "string",
          "example": "updatedPwd098",
          "description": "New password of the user."
        }
      }
    },
    "UserPasswordSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Password updated successfully."
                }
              }
            }
          }
        }
      }
    },
    "UserPasswordBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "example": [
                  {
                    "fields": "oldPassword",
                    "message": "The 'oldPassword' field is required."
                  },
                  {
                    "fields": "newPassword",
                    "message": "The 'newPassword' field is required."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "UserPasswordForbiddonResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User account is inactive."
                }
              }
            }
          }
        }
      }
    },
    "UserPasswordNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found."
                }
              }
            }
          }
        }
      }
    },
    "UserPasswordUnauthResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "401"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Current password is incorrect."
                }
              }
            }
          }
        }
      }
    },

    "UserDeleteSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "410"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User profile has been permanently deleted."
                }
              }
            }
          }
        }
      }
    },
    "UserDeleteNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found."
                }
              }
            }
          }
        }
      }
    },
    "UserDeleteForbiddonResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User account is inactive."
                }
              }
            }
          }
        }
      }
    },

    "UserFollow": {
      "type": "object",
      "required": ["followerId"],
      "properties": {
        "followerId": {
          "type": "number",
          "example": 2,
          "description": "User ID of the follower."
        }
      }
    },
    "UserFollowSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "follow": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "followerId": {
                      "type": "number",
                      "example": 1
                    },
                    "followingId": {
                      "type": "number",
                      "example": 2
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-05-04T18:30:05.944Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-05-04T18:30:05.944Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserFollowBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string",
                    "example": "followerId"
                  },
                  "message": {
                    "type": "string",
                    "example": "Field 'followerId' is empty!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserFollowForbiddonResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Already following this user."
                }
              }
            }
          }
        }
      }
    },
    "UserFollowNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User not found."
                }
              }
            }
          }
        }
      }
    },

    "UserUnfollow": {
      "type": "object",
      "required": ["followId"],
      "properties": {
        "followId": {
          "type": "number",
          "example": 2,
          "description": "ID of the follow."
        }
      }
    },
    "UserUnfollowSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unfollowed this user successfully."
                }
              }
            }
          }
        }
      }
    },
    "UserUnfollowBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string",
                    "example": "followId"
                  },
                  "message": {
                    "type": "string",
                    "example": "Field 'followId' is empty!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "UserUnfollowForbiddonResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Action not permitted."
                }
              }
            }
          }
        }
      }
    },
    "UserUnfollowNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid follow id."
                }
              }
            }
          }
        }
      }
    },

    "PostCreate": {
      "type": "object",
      "required": ["title", "content", "countryId", "visitDate"],
      "properties": {
        "title": {
          "type": "string",
          "example": "First day at France",
          "description": "Title of the blog-post."
        },
        "content": {
          "type": "string",
          "example": "Touching down in France felt like stepping into a dream. From the aroma of fresh croissants in the morning air to the charm of cobblestone streets and cozy cafés, everything was surreal. Navigating a new language and culture was both exciting and humbling — but every smile, every “bonjour,” made the journey feel warm and welcoming.",
          "description": "Content of the blog-post."
        },
        "countryId": {
          "type": "number",
          "example": 23,
          "description": "Country abount the blog-post being made."
        },
        "visitDate": {
          "type": "string",
          "example": "31/03/2025",
          "description": "Date of the visit."
        }
      }
    },
    "PostCreateSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "201"
            },
            "data": {
              "type": "object",
              "properties": {
                "post": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "userId": {
                      "type": "number",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "First day at France"
                    },
                    "content": {
                      "type": "string",
                      "example": "Touching down in France felt like stepping into a dream. From the aroma of fresh croissants in the morning air to the charm of cobblestone streets and cozy cafés, everything was surreal. Navigating a new language and culture was both exciting and humbling — but every smile, every “bonjour,” made the journey feel warm and welcoming."
                    },
                    "countryId": {
                      "type": "number",
                      "example": 23
                    },
                    "visitDate": {
                      "type": "string",
                      "example": "2025-03-31T00:00:00.000Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-04-20T17:55:59.105Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-04-20T17:55:59.105Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PostCreateBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  }
                },
                "example": [
                  {
                    "fields": "title",
                    "message": "The 'title' field is required."
                  },
                  {
                    "fields": "content",
                    "message": "The 'content' field is required."
                  },
                  {
                    "fields": "countryId",
                    "message": "The 'countryId' field is required."
                  },
                  {
                    "fields": "visitDate",
                    "message": "The 'visitDate' field is required."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "PostCreateNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "The country does not exist."
                }
              }
            }
          }
        }
      }
    },

    "PostGetAllSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "example": 1
                      },
                      "userId": {
                        "type": "number",
                        "example": 1
                      },
                      "title": {
                        "type": "string",
                        "example": "First day at France"
                      },
                      "content": {
                        "type": "string",
                        "example": "Touching down in France felt like stepping into a dream. From the aroma of fresh croissants in the morning air to the charm of cobblestone streets and cozy cafés, everything was surreal. Navigating a new language and culture was both exciting and humbling — but every smile, every “bonjour,” made the journey feel warm and welcoming."
                      },
                      "visitDate": {
                        "type": "string",
                        "example": "2025-03-31T00:00:00.000Z"
                      },
                      "Country": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 23
                          },
                          "officialName": {
                            "type": "string",
                            "example": "French Republic"
                          },
                          "commonName": {
                            "type": "string",
                            "example": "France"
                          },
                          "capital": {
                            "type": "string",
                            "example": "Paris"
                          },
                          "languages": {
                            "type": "object",
                            "properties": {
                              "fra": {
                                "type": "string",
                                "example": "French"
                              }
                            }
                          },
                          "Currency": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "example": 12
                              },
                              "name": {
                                "type": "string",
                                "example": "Euro"
                              },
                              "code": {
                                "type": "string",
                                "example": "EUR"
                              },
                              "symbol": {
                                "type": "string",
                                "example": "€"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2025-04-20T17:02:23.103Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2025-04-20T17:02:23.103Z"
                              }
                            }
                          },
                          "flagUrl": {
                            "type": "string",
                            "example": "https://flagcdn.com/fr.svg"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2025-04-20T17:04:54.634Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2025-04-20T17:04:54.634Z"
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2025-04-20T17:55:59.105Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2025-04-20T17:55:59.105Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PostGetAllBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid post type."
                }
              }
            }
          }
        }
      }
    },

    "PostGetByIdSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "post": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "userId": {
                      "type": "number",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "First day at France"
                    },
                    "content": {
                      "type": "string",
                      "example": "Touching down in France felt like stepping into a dream. From the aroma of fresh croissants in the morning air to the charm of cobblestone streets and cozy cafés, everything was surreal. Navigating a new language and culture was both exciting and humbling — but every smile, every “bonjour,” made the journey feel warm and welcoming."
                    },
                    "visitDate": {
                      "type": "string",
                      "example": "2025-03-31T00:00:00.000Z"
                    },
                    "Country": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 23
                        },
                        "officialName": {
                          "type": "string",
                          "example": "French Republic"
                        },
                        "commonName": {
                          "type": "string",
                          "example": "France"
                        },
                        "capital": {
                          "type": "string",
                          "example": "Paris"
                        },
                        "languages": {
                          "type": "object",
                          "properties": {
                            "fra": {
                              "type": "string",
                              "example": "French"
                            }
                          }
                        },
                        "Currency": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "example": 12
                            },
                            "name": {
                              "type": "string",
                              "example": "Euro"
                            },
                            "code": {
                              "type": "string",
                              "example": "EUR"
                            },
                            "symbol": {
                              "type": "string",
                              "example": "€"
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2025-04-20T17:02:23.103Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2025-04-20T17:02:23.103Z"
                            }
                          }
                        },
                        "flagUrl": {
                          "type": "string",
                          "example": "https://flagcdn.com/fr.svg"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2025-04-20T17:04:54.634Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2025-04-20T17:04:54.634Z"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-04-20T17:55:59.105Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-04-20T17:55:59.105Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PostGetByIdBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid format for post ID."
                }
              }
            }
          }
        }
      }
    },
    "PostGetByIdNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Post not found."
                }
              }
            }
          }
        }
      }
    },

    "PostUpdate": {
      "type": "object",
      "required": ["id", "title", "content", "countryId", "visitDate"],
      "properties": {
        "id": {
          "type": "number",
          "example": 1,
          "description": "ID of the post."
        },
        "title": {
          "type": "string",
          "example": "Week in day at Sri Lanka",
          "description": "Post title."
        },
        "content": {
          "type": "string",
          "example": "Touching down in France felt like stepping into a dream. From the aroma of fresh croissants in the morning air to the charm of cobblestone streets and cozy cafés, everything was surreal. Navigating a new language and culture was both exciting and humbling — but every smile, every “bonjour,” made the journey feel warm and welcoming.",
          "description": "Post content."
        },
        "countryId": {
          "type": "number",
          "example": 2,
          "description": "ID of the country."
        },
        "visitDate": {
          "type": "string",
          "example": "01/01/2000",
          "description": "Visited."
        }
      }
    },
    "PostUpdateSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "201"
            },
            "data": {
              "type": "object",
              "properties": {
                "post": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "userId": {
                      "type": "number",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "Week in day at Sri Lanka"
                    },
                    "content": {
                      "type": "string",
                      "example": "Touching down in France felt like stepping into a dream. From the aroma of fresh croissants in the morning air to the charm of cobblestone streets and cozy cafés, everything was surreal. Navigating a new language and culture was both exciting and humbling — but every smile, every “bonjour,” made the journey feel warm and welcoming."
                    },
                    "visitDate": {
                      "type": "string",
                      "example": "1999-12-31T18:00:00.000Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-05-04T18:29:00.729Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-05-04T18:29:00.729Z"
                    },
                    "Country": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 2
                        },
                        "officialName": {
                          "type": "string",
                          "example": "Democratic Socialist Republic of Sri Lanka"
                        },
                        "commonName": {
                          "type": "string",
                          "example": "Sri Lanka"
                        },
                        "capital": {
                          "type": "string",
                          "example": "Sri Jayawardenepura Kotte"
                        },
                        "languages": {
                          "type": "string",
                          "example": "{\"sin\":\"Sinhala\",\"tam\":\"Tamil\"}"
                        },
                        "flagUrl": {
                          "type": "string",
                          "example": "https://flagcdn.com/lk.svg"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2025-05-04T18:24:33.293Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2025-05-04T18:24:33.293Z"
                        },
                        "Currency": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number",
                              "example": 2
                            },
                            "name": {
                              "type": "string",
                              "example": "Sri Lankan Rupees"
                            },
                            "code": {
                              "type": "string",
                              "example": "LKR"
                            },
                            "symbol": {
                              "type": "string",
                              "example": "රූ"
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2025-05-04T18:24:33.289Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2025-05-04T18:24:33.289Z"
                            }
                          }
                        },
                        "Likes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "example": 2
                              },
                              "userId": {
                                "type": "number",
                                "example": 2
                              },
                              "isLike": {
                                "type": "boolean",
                                "example": true
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2025-05-04T18:30:22.315Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2025-05-04T18:30:22.315Z"
                              }
                            }
                          }
                        },
                        "Comments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "example": 2
                              },
                              "userId": {
                                "type": "number",
                                "example": 2
                              },
                              "content": {
                                "type": "string",
                                "example": "Nice post! Loved it."
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2025-05-04T18:30:22.315Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2025-05-04T18:30:22.315Z"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PostUpdateBadResponse": {
      "type": "object",
      "properties": {}
    },
    "PostUpdateForbiddonResponse": {},
    "PostUpdateNotFoundResponse": {},

    "PostDeleteSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Post has been permanently deleted."
                }
              }
            }
          }
        }
      }
    },
    "PostDeleteBadResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "400"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid format for post ID."
                }
              }
            }
          }
        }
      }
    },
    "PostDeleteForbiddonResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "403"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Access denied."
                }
              }
            }
          }
        }
      }
    },
    "PostDeleteNotFoundResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "true"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "404"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Post not found."
                }
              }
            }
          }
        }
      }
    },

    "CountryGetAllSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "200"
            },
            "data": {
              "type": "object",
              "properties": {
                "countries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "example": 1
                      },
                      "officialName": {
                        "type": "string",
                        "example": "Democratic Socialist Republic of Sri Lanka"
                      },
                      "commonName": {
                        "type": "string",
                        "example": "Sri Lanka"
                      },
                      "capital": {
                        "type": "string",
                        "example": "Sri Jayawardenepura Kotte"
                      },
                      "currencyId": {
                        "type": "number",
                        "example": 2
                      },
                      "languages": {
                        "type": "string",
                        "example": "{\"sin\":\"Sinhala\",\"tam\":\"Tamil\"}"
                      },
                      "flagUrl": {
                        "type": "string",
                        "example": "https://flagcdn.com/lk.svg"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2025-05-04T18:24:35.310Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2025-05-04T18:24:35.310Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "ServerErrorResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "500"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Server error message!"
                }
              }
            }
          }
        }
      }
    },
    "AuthFailedResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": "false"
        },
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "number",
              "example": "401"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Authentication failed."
                }
              }
            }
          }
        }
      }
    }
  }
}
